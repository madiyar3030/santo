<?php

namespace App\Models;

use App\Traits\Authorable;
use App\Traits\Commentable;
use App\Traits\Detailable;
use App\Traits\FavourableTrait;
use App\Traits\Imageable;
use App\Traits\Shareable;
use App\Traits\Taggable;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\Relation;

class Forum extends Model
{
    use Commentable, Detailable, Taggable, Authorable, Imageable, Shareable, FavourableTrait;

    protected $hidden = ['updated_at', 'pivot', 'author_id', 'image_url'];
    protected $appends = ['model_type', 'in_favourite'];
    protected $fillable = ['title', 'description'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function(Forum $forum) {
            if (!isset($forum->attributes['published_at'])) {
                $forum->published_at = Carbon::now();
            }
        });

        self::deleting(function(Forum $forum) {
            $details = $forum->details()->get();
            foreach ($details as $detail) {
                $detail->delete();
            }
        });
    }

    #region Relations

    public function image_url() {
        return $this->morphOne(Image::class, 'imageable');
    }

    public function category() {
        return $this->belongsTo(FeedingCategory::class, 'category_id');
    }

    #endregion

    #region Accessors

    public function getModelTypeAttribute() {
        return array_search(self::class, Relation::$morphMap);
    }

    /*public function getDescriptionAttribute() {
        return $this->details->where('type', Detail::DESCRIPTION)->pluck('value')->first();
    }*/

    /*public function getImageAttribute() {
        if (!$this->image_url) return null;
        return $this->image_url->url;
    }*/

    #endregion
}
