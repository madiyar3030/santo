<?php

namespace App\Models;

use App\Traits\Authorable;
use App\Traits\Commentable;
use App\Traits\Detailable;
use App\Traits\FavourableTrait;
use App\Traits\Shareable;
use App\Traits\Taggable;
use Carbon\Carbon;
use Carbon\CarbonInterface;
use Carbon\CarbonInterval;
use Illuminate\Database\Eloquent\Model;

class Blog extends Model
{
    use Taggable, Authorable, Commentable, Detailable, Shareable, FavourableTrait;
    protected $hidden = ['created_at', 'updated_at', 'online_until', 'online_from', 'online_to'];
    protected $appends = ['online_yet', 'online_info', 'in_favourite'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function(Blog $blog) {
            if (!isset($blog->attributes['published_at'])) {
                $blog->published_at = Carbon::now();
            }
        });

        self::deleting(function(Blog $blog) {
            $details = $blog->details()->get();
            foreach ($details as $detail) {
                $detail->delete();
            }
        });
    }

    /*public function getOnlineAwhileAttribute() {
        $online_until = Carbon::make($this->online_until);
        if ($online_until > Carbon::now()) {
            $diff = $online_until->diffAsCarbonInterval(Carbon::now());
            return $diff->format('%H:%I:%S');
        }
        else {
            return null;
        }
    }*/

    public function getOnlineYetAttribute() {
        $now = Carbon::now();
        $to = Carbon::make($this->online_to);
        $until_date = Carbon::make($this->online_until);
        return $this->is_online()
            ? $now->diff($to)->format('%H:%I:%S')
            : null;
    }

    public function getOnlineInfoAttribute() {
        $arr = [
            'online_today' => $this->online_today(),
            'is_online' => $this->is_online(),
            'time_until_online' => $this->time_until_online(),
        ];
        return $arr;
    }

    public function online_today($now = null) {
        if ($this->online_until) {
            if (!$now) $now = Carbon::now();
            return $now->format('Y-m-d') <= Carbon::make($this->online_until)->format('Y-m-d');
        }
        return null;
    }

    public function is_online($now = null) {
        if (!$now) $now = Carbon::now();
        $from = Carbon::make($this->online_from);
        $to = Carbon::make($this->online_to);
        return !is_null($from) && !is_null($to) && $this->online_today($now) && $now >= $from && $now <= $to;
    }

    public function time_until_online($forHumans = 0) {
        $now = Carbon::now();
        $from = Carbon::make($this->online_from);
        if ($forHumans) {
            return $this->online_today() && $now < $from
                ? $now->diffForHumans($from, CarbonInterface::DIFF_ABSOLUTE, true, 2)
                : null;
        }
        else {
            return $this->online_today() && $now < $from
                ? $now->diff($from)->format('%H:%I:%S')
                : null;
        }
    }

}
